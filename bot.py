import telebot
from telebot import types
import random
import wikipedia
import re
import urllib.request
import info


bot = telebot.TeleBot(token=info.token)
chat_id = info.chat_id
wikipedia.set_lang("ru")


# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /start
@bot.message_handler(commands=['start'])
def start_message(message):
    sti = open('avatar.png', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç')
    btn2 = types.KeyboardButton('–ú–æ–∏ –Ω–∞–≤—ã–∫–∏')
    btn3 = types.KeyboardButton('–ü–∞–Ω–¥–æ—Ä–∞')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç {0.first_name} —ç—Ç–æ –¢–µ–ª–µ–≥—Ä–∞–º_–±–æ—Ç ‚úåÔ∏è".format(message.from_user, bot.get_me()),
                     reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /help
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(
        message.chat.id,
        '1) /hobby –ù–∞–≤—ã–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: üèì\n' +
        '2) /help –ï—Å–ª–∏ –≤—ã —á—Ç–æ-—Ç–æ –∑–∞–±—ã–ª–∏: üìí\n')


# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /hobby
@bot.message_handler(commands=['hobby'])
def show_hobbies(message):
    bot.send_message(message.chat.id, my_name() + hobby(), parse_mode='HTML')


@bot.message_handler(content_types=['photo'])
def photo(message):
    # –ü–æ–ª—É—á–∏–º ID —Ñ–æ—Ç–æ
    file_id = message.photo[-1].file_id
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å, –≥–¥–µ –ª–µ–∂–∏—Ç —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¢–µ–ª–µ–≥—Ä–∞–º–º–∞
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open("image.jpg", 'wb') as new_file:
        new_file.write(downloaded_file)


@bot.message_handler(content_types=['audio'])
def handle_docs_audio(message):
    # –ü–æ–ª—É—á–∏–º ID –∞—É–¥–∏–æ
    audio_id = message.audio.file_id
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å, –≥–¥–µ –ª–µ–∂–∏—Ç –∞—É–¥–∏–æ —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¢–µ–ª–µ–≥—Ä–∞–º–º–∞
    file_info = bot.get_file(audio_id)
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    urllib.request.urlretrieve(f'http://api.telegram.org/file/bot{info.token}/{file_info.file_path}',
                               file_info.file_path)


@bot.message_handler(content_types=['document'])
def handle_docs_audio(message):
    document_id = message.document.file_id
    file_info = bot.get_file(document_id)
    urllib.request.urlretrieve(f'http://api.telegram.org/file/bot{info.token}/{file_info.file_path}',
                               file_info.file_path)


@bot.message_handler(content_types=['sticker'])
def handle_docs_audio(message):
    sticker_id = message.sticker.file_id
    file_info = bot.get_file(sticker_id)
    urllib.request.urlretrieve(f'https://api.telegram.org/file/bot{info.token}/{file_info.file_path}',
                               file_info.file_path)


def getwiki(s):
    try:
        ny = wikipedia.page(s)
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 800 —Å–∏–º–≤–æ–ª–æ–≤
        wikitext = ny.content[:800]
        # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–æ—á–∫–∞–º
        wikimas = wikitext.split('.')
        # –û—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–ï –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏
        wikimas = wikimas[:-1]
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        wikitext2 = ''
        # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –≥–¥–µ –Ω–µ—Ç –∑–Ω–∞–∫–æ–≤ == (—Ç–æ –µ—Å—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
        for x in wikimas:
            if not ('==' in x):
                # –ï—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –æ—Å—Ç–∞–ª–æ—Å—å –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –∫ –Ω–∞—à–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
                # –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Ç–µ—Ä—è–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫ —Ç–æ—á–∫–∏ –Ω–∞ –º–µ—Å—Ç–æ
                if len((x.strip())) > 3:
                    wikitext2 = wikitext2 + x + '.'
            else:
                break
        # –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π —É–±–∏—Ä–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
        wikitext2 = re.sub('\([^()]*\)', '', wikitext2)
        wikitext2 = re.sub('\([^()]*\)', '', wikitext2)
        wikitext2 = re.sub('\{[^\{\}]*\}', '', wikitext2)

        return wikitext2

    except Exception as e:
        return '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å'


def my_name():
    str_format = (f'<b>üëã –ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç</b>\n\n' +
                  f'<b>–ò–º—è: </b> <i>{info.character["name"]}</i>\n' +
                  f'<b>–í–æ–∑—Ä–∞—Å—Ç: </b><i>{info.character["age"]}</i>\n' +
                  f'<b>–ü–ª–∞–Ω–µ—Ç–∞: </b><i>{info.character["adress"]}</i>\n\n')
    return str_format


def hobby():
    str_format = (f'<b>üèì –ú–æ–∏ –Ω–∞–≤—ã–∫–∏</b>\n\n' +
                  f'<b>–ù–∞–≤—ã–∫–∏: </b><i> {info.character["hobby"][0]} –∏ {info.character["hobby"][1]}</i>\n\n')
    return str_format


@bot.message_handler(content_types=['text'])
def func(message):
    if message.chat.type == 'private':
        if message.text == '–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç':
            bot.send_message(message.chat.id, my_name(), parse_mode='HTML')

        elif message.text == '–ú–æ–∏ –Ω–∞–≤—ã–∫–∏':
            bot.send_message(message.chat.id, hobby(), parse_mode='HTML')

        elif message.text == '–ü–∞–Ω–¥–æ—Ä–∞':
            bot.send_message(message.chat.id, getwiki('–ü–ª–∞–Ω–µ—Ç–∞ –ü–∞–Ω–¥–æ—Ä–∞'))

        else:
            question = message.text.strip().lower()
            if question in info.telebot_responses:
                response = random.choice(info.telebot_responses[question])
                bot.send_message(message.chat.id, text=response)
            else:
                bot.send_message(message.chat.id, text='–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å')


bot.polling(none_stop=True)
